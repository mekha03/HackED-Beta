#include <LiquidCrystal.h> //library for lcd

//lcd pins
int rs = 4; 
int en = 5;
int d4 = 10;
int d5 = 11;
int d6 = 12;
int d7 = 13;

LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

int voltageReading; //reading the voltage to use for light on or off

void setup(){
  lcd.begin(16,2); 

  Serial.begin(9600); //terminal
  pinMode(9,OUTPUT); 
  pinMode(A0, INPUT);
}
bool lightOn;
unsigned long startTime = 0;
unsigned long totalTimeOn = 0;
unsigned long endTime = 0;
bool previousState = lightOn;
bool currentState;

const int notificationInterval = 10000;  // Notification interval in milliseconds
unsigned long lastNotificationTime = 0;
unsigned long startOfCurrentInterval = 0;

const int delay1 = 50; //adding a delay to make sure the voltage fluctuations arent affecting time too much 

void loop() {

  digitalWrite(9, HIGH);  // Send a 5 V signal through pin 9

  voltageReading = digitalRead(A0); //read- A0 pin

  //if voltage reading true, light is on- current state is that light is on
  if (voltageReading) {
    lightOn = true;
    currentState = true;

    //if current state was changed (we turned it on from previously off, start timer and start counting the totalTimeOn)
    if (currentState != previousState) {
      startTime = millis();
      startOfCurrentInterval = startTime;  // Set the start time for the current interval
      previousState = currentState;
    }
    //if voltage reading nothing, light is off- current state is that light is off
  } else {
    lightOn = false;
    currentState = false;
    
    //if current state (of light being off) doesnt equal previous state (it was on before, now off)
    //delay by a little, and if its reading less than 375V, calculate totalTimeOn when we turn it off
    if (currentState != previousState) {
      delay(delay1);
      if (digitalRead(A0) < 375) {
        endTime = millis();
        totalTimeOn = totalTimeOn + (endTime - startTime);
        previousState = currentState;
      }
    }
  }

  lcd.setCursor(7, 0);
  lcd.print(totalTimeOn / 1000);

  // Notification
  if (lightOn && millis() - startOfCurrentInterval >= notificationInterval) {
    Serial.println("Your light is still on");
    startOfCurrentInterval = millis();  // Update the start time for the current interval
  }

  // Check if the user has entered a character in the Serial Monitor
  if (Serial.available() > 0) {
    char userInput = Serial.read();
    if (userInput == 'q') {
      Serial.print("Total Time On: ");
      Serial.print(totalTimeOn / 1000);
      Serial.println(" s");
    }
  }
}
